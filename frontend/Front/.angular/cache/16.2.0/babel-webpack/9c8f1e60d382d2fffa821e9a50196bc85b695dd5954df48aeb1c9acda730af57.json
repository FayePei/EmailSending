{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let EmailsendComponent = class EmailsendComponent {\n  constructor(http) {\n    this.http = http;\n    this.imageUrl = '/assets/maxresdefault.jpg';\n    this.EmailArray = [];\n    this.isResultLoaded = false;\n    this.isUpdateFormActive = false;\n    this.Emailaddr = \"\";\n    this.User = \"\";\n    this.idEmail = \"\";\n    this.getAllEmail();\n  }\n  ngOnInit() {}\n  getAllEmail() {\n    this.http.get(\"http://localhost:8085/api/email/\").subscribe(resultData => {\n      this.isResultLoaded = true;\n      console.log(resultData.data);\n      this.EmailArray = resultData.data;\n    });\n  }\n  register() {\n    // this.isLogin = false; \n    // alert(\"hi\");\n    let bodyData = {\n      \"idEmail\": this.idEmail,\n      \"User\": this.User,\n      \"Emailaddr\": this.Emailaddr\n    };\n    this.http.post(\"http://localhost:8085/api/email/add\", bodyData).subscribe(resultData => {\n      console.log(resultData);\n      alert(\"Email Registered Successfully\");\n      this.getAllEmail();\n      //  this.name = '';\n      //  this.address = '';\n      //  this.mobile  = 0;\n    });\n  }\n\n  setUpdate(data) {\n    this.idEmail = data.idEmail;\n    this.User = data.User;\n    this.Emailaddr = data.Emailaddr;\n  }\n  UpdateRecords() {\n    let bodyData = {\n      \"idEmail\": this.idEmail,\n      \"User\": this.User,\n      \"Emailaddr\": this.Emailaddr\n    };\n    this.http.put(\"http://localhost:8085/api/email/update\" + \"/\" + this.idEmail, bodyData).subscribe(resultData => {\n      console.log(resultData);\n      alert(\"Email Registered Updated\");\n      this.getAllEmail();\n    });\n  }\n  save() {\n    if (this.idEmail == '') {\n      this.register();\n    } else {\n      this.UpdateRecords();\n    }\n  }\n  setDelete(data) {\n    this.http.delete(\"http://localhost:8085/api/email/delete\" + \"/\" + data.idEmail).subscribe(resultData => {\n      console.log(resultData);\n      alert(\"Email Deleted\");\n      this.getAllEmail();\n    });\n  }\n};\nEmailsendComponent = __decorate([Component({\n  selector: 'app-emailsend',\n  templateUrl: './emailsend.component.html',\n  styleUrls: ['./emailsend.component.scss']\n})], EmailsendComponent);","map":{"version":3,"names":["Component","EmailsendComponent","constructor","http","imageUrl","EmailArray","isResultLoaded","isUpdateFormActive","Emailaddr","User","idEmail","getAllEmail","ngOnInit","get","subscribe","resultData","console","log","data","register","bodyData","post","alert","setUpdate","UpdateRecords","put","save","setDelete","delete","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/ziyanpei/test/frontend/Front/src/app/emailsend/emailsend.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-emailsend',\n  templateUrl: './emailsend.component.html',\n  styleUrls: ['./emailsend.component.scss']\n})\n\n\nexport class EmailsendComponent {\n  imageUrl: string = '/assets/maxresdefault.jpg'; \n  EmailArray : any[] = [];\n  isResultLoaded = false;\n  isUpdateFormActive = false;\n  Emailaddr  =\"\";\n  User  =\"\";\n  idEmail = \"\";\n\n\n  constructor(private http: HttpClient ) \n  {\n    this.getAllEmail();\n  }\n\n  ngOnInit(): void {\n  }\n\n  getAllEmail()\n  { \n    this.http.get(\"http://localhost:8085/api/email/\")\n    .subscribe((resultData: any)=>\n    {\n        this.isResultLoaded = true;\n        console.log(resultData.data);\n        this.EmailArray = resultData.data;\n    });\n  }\n\n  \n  register()\n  {\n   // this.isLogin = false; \n   // alert(\"hi\");\n    let bodyData = {\n      \"idEmail\" : this.idEmail,\n      \"User\" : this.User,\n      \"Emailaddr\" : this.Emailaddr,\n    };\n    this.http.post(\"http://localhost:8085/api/email/add\",bodyData).subscribe((resultData: any)=>\n    {\n        console.log(resultData);\n        alert(\"Email Registered Successfully\")\n        this.getAllEmail();\n      //  this.name = '';\n      //  this.address = '';\n      //  this.mobile  = 0;\n    });\n  }\n\n  setUpdate(data: any) \n  {\n   this.idEmail = data.idEmail;\n   this.User = data.User;\n   this.Emailaddr = data.Emailaddr;\n \n  }\n\n\n  UpdateRecords()\n  {\n    let bodyData = \n    {\n      \"idEmail\" : this.idEmail,\n      \"User\" : this.User,\n      \"Emailaddr\" : this.Emailaddr\n    };\n    \n    this.http.put(\"http://localhost:8085/api/email/update\"+ \"/\"+ this.idEmail,bodyData).subscribe((resultData: any)=>\n    {\n        console.log(resultData);\n        alert(\"Email Registered Updated\")\n        this.getAllEmail();\n      \n    });\n  }\n \n  save()\n  {\n    if(this.idEmail == '')\n    {\n        this.register();\n    }\n      else\n      {\n       this.UpdateRecords();\n      }       \n  }\n\n  setDelete(data: any)\n  {\n    this.http.delete(\"http://localhost:8085/api/email/delete\"+ \"/\"+ data.idEmail).subscribe((resultData: any)=>\n    {\n        console.log(resultData);\n        alert(\"Email Deleted\")\n        this.getAllEmail();\n    });\n  }\n}\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}